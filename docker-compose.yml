version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER:     auth
      POSTGRES_PASSWORD: authpass
      POSTGRES_DB:       auth
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth"]
      interval: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports: ["5672:5672"]
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    environment:
      KC_DB: postgres
      KC_DB_URL: "jdbc:postgresql://postgres:5432/auth"
      KC_DB_USERNAME: auth
      KC_DB_PASSWORD: authpass
      KC_HOSTNAME_STRICT: false
      KC_HTTPS_ENABLED: false
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev", "--health-enabled=true"]
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports: ["8025:8025"]

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:  {condition: service_healthy}
      redis:     {condition: service_healthy}
      rabbitmq:  {condition: service_healthy}
    environment:
      CONFIG_PATH: /app/configs/config.yaml
    ports:
      - "8090:8090"
      - "9090:9090"
    volumes:
      - ./configs:/app/configs:ro
    restart: unless-stopped

volumes:
  pg-data:
  redis-data:
  rabbit-data:
